[{"categories":["编程"],"content":"当 hive 表的分区字段 是 date 类型时，用如下方式读取会发生报错。 val targetDay = \"2020-08-20\" spark.read.table(tableName) .where(s\"targetday in (\" + s\"date_sub('$targetDay',59),\" + s\"date_sub('$targetDay',49),\" + s\"date_sub('$targetDay',39),\" + s\"date_sub('$targetDay',29),\" + s\"date_sub('$targetDay',14),\" + s\"date_sub('$targetDay',6),\" + s\"date_sub('$targetDay',5),\" + s\"date_sub('$targetDay',4),\" + s\"date_sub('$targetDay',3),\" + s\"date_sub('$targetDay',2),\" + s\"date_sub('$targetDay',1),\" + s\"date_sub('$targetDay',0))\" ).show targetday 为 表的分区字段，date类型。 当 in 后面 的日期个数大于 10 时就会报错，小于等于 10 时都不会报错。奇怪的现象。。。 targetday 为 string 类型不会有此错误。 ","date":"2023-04-17","objectID":"/posts/spark-hive-partition-issue/:0:0","tags":["spark","大数据"],"title":"spark 读取 hive date 分区表 奇怪的报错","uri":"/posts/spark-hive-partition-issue/"},{"categories":["编程"],"content":"线上项目出现一个很奇怪的问题，数据经过Spark程序消费Kafka写入Kudu，出现Kudu Master连接超时，这个问题开始排查不出原因，有点头大，只能采用下下策，重启Spark程序，出现过几次后， 我记录了出现的时间，发现每次出现时间有个固定周期，一周，有规律就是最大的好消息，感觉离发现真相不远了，果然网上有这方面的问题讨论，虽说以前也去网上搜索过相关问题，毕竟Kudu相比于Hive、HBase还是小众了一点。。。是Kudu Java Client的问题，使用1.5以上版本就没问题了。 参考：关于kudu使用的一些问题及解决办法 ","date":"2023-04-17","objectID":"/posts/kudu-periodic-issues/:0:0","tags":["kudu","大数据"],"title":"Apache Kudu 写入数据定期出问题","uri":"/posts/kudu-periodic-issues/"},{"categories":["编程"],"content":"最近线上的spark项目日志文件急剧增加，磁盘顶不住了啊，解决日志文件问题，参考下面三篇文章，基本就可以搞明白了。 Spark日志过大导致磁盘溢出问题解决方案 Spark日志配置及问题排查方式。 Spark log4j 日志配置详解 以上内容转载自网络，如有侵权，请联系删除。 ","date":"2023-04-17","objectID":"/posts/spark-yarn-cluster-log4j/:0:0","tags":["spark","大数据"],"title":"spark yarn cluster模式下log4j日志的配置","uri":"/posts/spark-yarn-cluster-log4j/"},{"categories":["分享"],"content":"转载自网络，不保证可用性及是否拥有版权，仅供分享，如有法律纠纷，请联系删除。 国内网站 1、鸠摩搜书 网址：https://www.jiumodiary.com/ 一个强大的搜书神站，无论是什么类型的书籍，只要你知道书名，就可以轻松的搜到你想要书籍。页面简单明了，书籍种类繁多，格式多种多样，有mobi格式、pdf格式、word格式、txt格式等。关键是可以无限下载，无需注册登录。 2、周读 网址：http://www.ireadweek.com/index.php/Index/index.html 周读是一个提供优质的epud,mobi,pdf,txt电子书下载和分享的网站，帮助不知道读什么书的用户，选择值得读的好书籍，该网站提供多种书籍分类，涵盖了大多数的可读书籍。 3、我的小书屋 网址：http://mebook.cc/ 免费无广告、电子书的质量很好，图书都是经过站长精挑细选的。网站分为畅销小说、网络小说、合集资源、多看专区、杂志期刊、漫画、工具书、原版书籍、轻小说等模块。站长每天都会推荐更新几本书，书太多不知道读什么，就试试站长推荐的吧。 4、书格 网址： https://shuge.org/ 书格是一个自由开放的在线古籍图书馆，致力于开放式分享、介绍、推荐古本（四九以前的影像本）PDF；网站致力于为古籍的保护与数字化传播贡献。 5、西林街搜索 网址：http://www.xilinjie.com/ 专注于网盘、视频、文库（文档、古籍、专业书籍、电子书PDF、ePub、Mobi等格式）、学术（各种期刊、论文、学报等）和Mooc（在线课程、学习、视频教程）等资源的搜索。 6、好读 网址：http://haodoo.net 免费的线上繁体中文图书馆，可在线阅读及下载，可下载的格式有：updb，pdb，prc，epub。 7、图灵社区 网址：http://www.ituring.com.cn/ 图灵社区主要专注于科技书籍的出版，包括计算机、数学统计、科普等领域，提供免费和付费的电子书。用户可以使用网银或者支付宝的购买方式，大部分电子书同时提供了三种阅读方式：在线阅读、MOBI 推送、PDF 下载，部分书籍只提供其中部分格式。 8、盘搜 网址：http://www.pansoso.com/ 一个老牌网盘搜索工具，功能非常强大，界面非常简洁。每天都有更新，不同达人分享自己的“盘中资源”！盘搜不存储任何网盘内容，但是资源非常丰富，无论是工作还是学习都必备。 9、苦瓜书盘 网址：https://kgbook.com/ 苦瓜书盘,电子书分享的平台。适合电纸书阅读的6寸pdf及mobi格式电子书制作技术的网站。 10、新浪爱问共享资料 网址：http://ishare.iask.sina.com.cn/ 新浪爱问共享资料是新浪旗下的在线资料分享站，免费高速上传或下载各类资源，内容涉及教育资源、专业资料、IT的资料、娱乐生活、经济管理、办公文书、游戏资料等。如果你要寻找偏学术的资料，所有地方都找不到，可以来这里试试，一般为扫描版PDF。 11、E书联盟 网址：http://www.book118.com/ E书联盟是一个庞大的免费中文电子书下载站，提供各类电子书下载，其中含比较专业的电子图书，提供部分电子书在线阅读。 12、云海电子图书馆 网址：http://www.pdfbook.cn/ 云海电子图书馆是致力于pdf电子书的专业网站,提供各门类pdf电子书下载及高清pdf电子书。 13、万千集合站 网址：http://www.hejizhan.com/html/search 包含非常多的教材类相关电子书籍，搜索后直接显示下载链接。搜索结果基本涵盖了所有版本的电子教材、习题详解等。如果上大学时有这种资源，就省下好多买教材、习题解答的钱了。 14、蚂蚁搜书 网址：http://book.mybanshu.win/ IT书更多的资源网站，支持下载，不支持kindle推送。注册需要加微信索要邀请码，也是管理很严格了。 15、书语者 网址：https://book.shuyuzhe.com/ 书语者电子图书馆，一个搜书网站，让你快速找到想要的书籍！ 16、计算机书控 网址：http://bestcbooks.com/ 这个网站可谓是计算机专业的福音，这里包含许多优秀的计算机书籍下载。无论是英文原版还是中文这里都有。 17、影印古籍资料 网址：https://sou-yun.com/eBookIndex.aspx 提供7000+种古籍资料的网上阅读和PDF格式下载服务。 18、知轩藏书 网址：http://www.zxcs8.com/ 这是一个小说网站，在这里你可以找到你想要的小说。 19、国学网 地址：http://www.guoxue.com/ 一家在国学传播领域独具特色的文化创意企业，主要从事古籍数字化研究、网络文献检索开发和网站建设，是中国最大的专业古籍电子文献数据公司之一。 20、国家数字图书馆 网址： http://www.nlc.gov.cn/index.htm 大量在线资源、子数据库、可以在线阅读海量电子书，需要注册（实名注册、需要身份证号）。国图购买了大量资源，有账号，便可在线阅读或者下载，版权期限内的图书只能读前两章，民国图书和古籍则可阅读全部内容。 21、PDF之家 网址： http://www.pdfzj.com/ PDF之家，做中国最好的pdf资源站，致力最全最新的pdf杂志、期刊杂志、电子杂志、电子图书的免费分享和下载服务。 22、我爱读电子书 网址：http://www.woaidu.org/ 我爱读电子书是权威电子书搜索引擎，可以使用我爱读电子书快速的找到自己喜欢的电子书，也可以通过书榜了解最新最热门的书，随时随地畅想自己喜欢的书。 23、高清杂志网 网址：http://www.gqzzw.com/ 高清杂志网提供杂志国内热门原版高清电子杂志下载服务,目前有财经理财、电脑数码、故事传奇、婚姻家庭、健康养生、教育教学、经济法律、科技科普、旅游民俗、女性杂志等等。 24、超星电子书 网址：http://www.chaoxing.com 40万电子书，注册后可以在线或使用客户端阅读海量书籍。若在教育网中，推荐包库网址 ，可以将PDG格式电子书下载到本机上离线阅读。pdg如何转成pdf，请看百度经验 。该站共享资料页也有大量资源。 25、走读派 地址：http://zoudupai.com 瀑布流电子书网站，支持下载和推送，注册登陆后无其他限制，但是书不多，上传资源需要先申请。资源质量有待优化。其书评系统 #书瓦台# 形式接近微博。 26、掌上书苑 地址：https://www.cnepub.com/ Epub格式电子书下载站，下载和推送均为付费服务，但是可以免费在线阅读 27、众人搜索网 网址：http://dianzishu.renrensousuo.com/ 一个电子书搜索功能的网站，可以同时搜索各类电子书、电子小说等。 28、胖次搜索 网址：https://www.panc.cc/ 胖次的搜索结果需要配合繁体字才能有最佳效果，整体来说胖次还蛮好用的，连隐秘绝迹的讲座录音/笔记都有，这个必须给点个赞！界面做的也挺简洁，资源方面说实话也够看了。胖次可搜索影音视频、音乐歌曲、小说文档、程序App、图片壁纸、压缩文件BT种子等资源；胖次搜索如果是无效资源，会显示出来，这个很方便。 29、盘多多 网址：http://www.panduoduo.net/ 热门资源、专业资源方面出来的结果都很棒。office2016，各科目的文献资料都有，只要点击链接，就能进入详细页面进行下载，在页面下方，也列出了其他相关资源，全站无诱导下载的假按钮，真心不错。小问题：资源最丰富，但是偶尔不稳定。 30、去转盘网 网址：http://www.quzhuanpan.com/ 去转盘有着风景宜人的界面，是一个网盘搜索引擎，可以搜索bt和网盘资源还有资源分享等功能，搜索类型主要有影视、音乐、电子书、种子、软件等各种资源，搜索网盘为百度网盘。同时开发了PC端和app客户端，链接龙轩导航、哔哩哔哩、咪咕鱼等网站，功能十分强大。 31、麦库搜索 网址：http://huisou.me/ 麦库搜索界面相当简约，但不影响其强大的搜索功能。麦库是利用Google创建的一系列垂直搜索引擎，所以Google的一些使用技巧同样适合于麦库搜索。麦库数据来源：百度网盘，新浪微盘等。 32、特百度 网址：http://www.tebaidu.com/ 特百度云提供百度云旗下的百度网盘搜索下载百度网盘的资源，本站也支持百度网盘登陆，百度网盘是目前受欢迎的T级超大免费网盘，注册用户过亿。 33、史莱姆搜索 网址：http://www.slimego.cn/ 最丰富的学习资料库,收集整理了大量免费资源,教学资源,百度云资源,网盘资源。包含主流的资源搜索外,还能找到各行业细分的学习资源。 国外网站 34、Library Genesis 网址：http://gen.lib.rus.ec/ 这个界面简洁明了，输入你想要找的关键词或者全名，就可以搜到该领域的一些电子书籍。一些科研的电子书，还有科研论文、小说、喜剧、行业标准、杂志啥的都可以搜搜试试。从这个网站搜索可以搜出一本书的好多版本，大家根据自己的需求下载。 35、Project Gutenberg 网址：http://www.gutenberg.org/ 它是国外一个知名的电子书免费分享网站，旨在基于互联网，大量提供版权过期而进入公有领域书籍的一项协作计划，","date":"2023-04-17","objectID":"/posts/book-search-website/:0:0","tags":["杂项"],"title":"五十个电子书搜索网","uri":"/posts/book-search-website/"},{"categories":["编程"],"content":"配置好下面三个属性。 \u003c!-- 超过时间限制是否回收 --\u003e \u003cproperty name=\"removeAbandoned\" value=\"true\" /\u003e \u003c!-- 超时时间；单位为秒。180秒=3分钟 --\u003e \u003cproperty name=\"removeAbandonedTimeout\" value=\"180\" /\u003e \u003c!-- 关闭abanded连接时输出错误日志 --\u003e \u003cproperty name=\"logAbandoned\" value=\"true\" /\u003e 查看日志文件。 2019-04-17 17:10:05:140 - ERROR [Druid-ConnectionPool-Destroy-1559154670] - com.alibaba.druid.pool.DruidDataSource com.alibaba.druid.pool.DruidDataSource.removeAbandoned:2666 abandon connection, owner thread: http-nio-8085-exec-1, connected at : 1555491605100, open stackTrace at java.lang.Thread.getStackTrace(Thread.java:1559) at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1313) at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1235) at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1225) at com.xxxx.xx.common.util.JdbcUtil.linkTrace(JdbcUtil.java:39) at com.xxxx.xx.xxxxx.service.impl.DashboardServiceImpl.getExpenTrend(DashboardServiceImpl.java:263) at com.xxxx.xx.xxxxx.service.impl.DashboardServiceImpl.getBossData(DashboardServiceImpl.java:58) at com.xxxx.xx.xxxxx.controller.DashboardController.getBossData(DashboardController.java:43) 日志里查找removeAbandoned关键字，找到自己哪个方法获取连接后没有关闭资源，排查原因。 ","date":"2023-04-17","objectID":"/posts/druid-connect-not-free/:0:0","tags":["java"],"title":"阿里Druid连接池连接不释放、连接泄漏排查","uri":"/posts/druid-connect-not-free/"},{"categories":["编程"],"content":"最近用到阿里云oss，有阿里云服务器，通过代理内网访问可以实现免除OSS流量费，查到很多nginx反向代理的教程，但是纯java实现没有找到，感觉可以试一试。 （一） 首先要解决反向代理的问题，搜到org.mitre.dsmiley.httpproxy.ProxyServlet可解决。 \u003cdependency\u003e \u003cgroupId\u003eorg.mitre.dsmiley.httpproxy\u003c/groupId\u003e \u003cartifactId\u003esmiley-http-proxy-servlet\u003c/artifactId\u003e \u003cversion\u003e1.11\u003c/version\u003e \u003c/dependency\u003e @Configuration public class MyConfig { @Bean public ServletRegistrationBean servletRegistrationAliBean01() { ServletRegistrationBean oss = new ServletRegistrationBean(new ProxyServlet(), \"/ali/bucket_name/*\");//修改为自己的bucket_name oss.setName(\"bucket_name\"); oss.addInitParameter(\"targetUri\", \"http://bucket_name.oss-cn-beijing.aliyuncs.com\");//本地测试环境用外网地址，线上改成内网访问的地址 oss.addInitParameter(ProxyServlet.P_LOG, \"true\"); return oss; } } （二） Controller配置如下，转发到自己配置的反向代理 @RestController @RefreshScope @RequestMapping(\"/api/es\") public class TestController { @RequestMapping(\"/static/**\") public void testVideoOne(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException, URISyntaxException { String resourcePath = request.getRequestURI().replace(\"/api/es/static\",\"\"); HeaderUtil.setHeaderOwn(request,resourcePath); request.getRequestDispatcher(\"/ali\" + resourcePath).forward(request, response); } } （三） 其中为request设置Header以认证OSS访问的HeaderUtil如下，其中有OSS Authorization计算的java实现，用java的反射在request中添加Header信息。 import org.apache.commons.codec.binary.Base64; import org.apache.tomcat.util.http.MimeHeaders; import javax.crypto.Mac; import javax.crypto.spec.SecretKeySpec; import javax.servlet.http.HttpServletRequest; import java.lang.reflect.Field; import java.net.URISyntaxException; import java.nio.charset.Charset; import java.security.InvalidKeyException; import java.security.NoSuchAlgorithmException; import java.text.SimpleDateFormat; import java.util.Date; import java.util.Locale; import java.util.TimeZone; public class HeaderUtil { /** * 给request加入Header信息，验证OSS访问权限 * @param request * @throws URISyntaxException */ public static void setHeaderOwn(HttpServletRequest request,String resourcePath) throws URISyntaxException { SimpleDateFormat sdf = new SimpleDateFormat(\"EEE, dd MMM yyyy HH:mm:ss 'GMT'\", Locale.US); sdf.setTimeZone(TimeZone.getTimeZone(\"GMT\")); String date_GMT = sdf.format(new Date()); String data = request.getMethod() + \"\\n\" + \"\\n\" + \"\\n\" + date_GMT + \"\\n\" + resourcePath; String signature = genHMAC(\"AccessKeySecret\", data);//AccessKeySecret改成自己的 reflectSetParam(request, \"Authorization\", \"OSS AccessKeyId:\" + signature);//AccessKeyId改成自己的 reflectSetParam(request, \"Date\", date_GMT); } /** * 反射修改header信息，key-value键值对加入到header中 * * @param request * @param key * @param value */ private static void reflectSetParam(HttpServletRequest request, String key, String value) { Class\u003c? extends HttpServletRequest\u003e requestClass = request.getClass(); // System.out.println(\"request实现类=\"+requestClass.getName()); try { Field request1 = requestClass.getDeclaredField(\"request\"); request1.setAccessible(true); Object o = request1.get(request); Field coyoteRequest = o.getClass().getDeclaredField(\"coyoteRequest\"); coyoteRequest.setAccessible(true); Object o1 = coyoteRequest.get(o); // System.out.println(\"coyoteRequest实现类=\"+o1.getClass().getName()); Field headers = o1.getClass().getDeclaredField(\"headers\"); headers.setAccessible(true); MimeHeaders o2 = (MimeHeaders) headers.get(o1); o2.addValue(key).setString(value); } catch (Exception e) { e.printStackTrace(); } } /** * HmacSHA1 Base64加密 * @param key * @param data * @return */ public static String genHMAC(String key, String data) { byte[] result = null; try { //根据给定的字节数组构造一个密钥,第二参数指定一个密钥算法的名称 SecretKeySpec signinKey = new SecretKeySpec(key.getBytes(), \"HmacSHA1\"); //生成一个指定 Mac 算法 的 Mac 对象 Mac mac = Mac.getInstance(\"HmacSHA1\"); //用给定密钥初始化 Mac 对象 mac.init(signinKey); //完成 Mac 操作 byte[] rawHmac = mac.doFinal(data.getBytes(Charset.forName(\"UTF-8\"))); result = Base64.encodeBase64(rawHmac); } catch (NoSuchAlgorithmException e) { System.err.println(e.getMessage()); } catch (InvalidKeyException e) { System","date":"2023-04-17","objectID":"/posts/spring-proxy-oss/:0:0","tags":["java","oss"],"title":"spring cloud java反向代理访问阿里云OSS私有资源","uri":"/posts/spring-proxy-oss/"},{"categories":null,"content":"\u003cno value\u003e's friends","date":"2023-04-17","objectID":"/friends/","tags":null,"title":"友情链接","uri":"/friends/"},{"categories":null,"content":"\r","date":"2023-04-17","objectID":"/friends/:0:0","tags":null,"title":"友情链接","uri":"/friends/"},{"categories":null,"content":"基本信息 - nickname: Lruihao avatar: https://lruihao.cn/images/avatar.jpg url: https://lruihao.cn description: Lruihao's Note ","date":"2023-04-17","objectID":"/friends/:1:0","tags":null,"title":"友情链接","uri":"/friends/"},{"categories":null,"content":"友情提醒 Notice\r互换友链请按以上格式在评论留言。（仅限个人非商业博客 / 网站） 提醒：网站失效、停止维护、内容不当都可能被取消连接！ 那些不尊重他人劳动成果，转载不加出处的，或恶意行为的网站，还请您不要来进行交换了。 ","date":"2023-04-17","objectID":"/friends/:2:0","tags":null,"title":"友情链接","uri":"/friends/"}]