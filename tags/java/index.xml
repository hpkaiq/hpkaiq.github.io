<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>java - 标签 - PME-Blog</title>
    <link>https://hpk.me/tags/java/</link>
    <description>java - 标签 - PME-Blog</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>hpkaiq@qq.com (hpkaiq)</managingEditor>
      <webMaster>hpkaiq@qq.com (hpkaiq)</webMaster><lastBuildDate>Tue, 18 Apr 2023 14:21:15 &#43;0800</lastBuildDate><atom:link href="https://hpk.me/tags/java/" rel="self" type="application/rss+xml" /><item>
  <title>java 频次控制</title>
  <link>https://hpk.me/posts/java-rate-limit-google-guava/</link>
  <pubDate>Tue, 18 Apr 2023 14:21:15 &#43;0800</pubDate>
  <author>hpkaiq</author>
  <guid>https://hpk.me/posts/java-rate-limit-google-guava/</guid>
  <description><![CDATA[<p>访问某接口拉取数据，接口需要频次控制，经调研，<code>com.google.common.util.concurrent.RateLimiter</code>可轻易实现。</p>
<h2 id="1-maven">1. Maven</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl">        <span class="nt">&lt;dependency&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&lt;groupId&gt;</span>com.google.guava<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&lt;artifactId&gt;</span>guava<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&lt;version&gt;</span>31.1-jre<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/dependency&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;dependency&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&lt;groupId&gt;</span>cn.hutool<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&lt;artifactId&gt;</span>hutool-all<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&lt;version&gt;</span>5.8.4<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/dependency&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="2-测试代码">2. 测试代码</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">cn.hutool.http.HttpRequest</span><span class="o">;</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">com.google.common.util.concurrent.RateLimiter</span><span class="o">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.Map</span><span class="o">;</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.concurrent.TimeUnit</span><span class="o">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">RateLimiterTest</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="kd">private</span> <span class="kd">final</span> <span class="n">RateLimiter</span> <span class="n">rateLimiter</span> <span class="o">=</span> <span class="n">RateLimiter</span><span class="o">.</span><span class="na">create</span><span class="o">(</span><span class="mi">20</span><span class="o">,</span><span class="mi">1000</span><span class="o">,</span> <span class="n">TimeUnit</span><span class="o">.</span><span class="na">MILLISECONDS</span><span class="o">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">private</span> <span class="nf">RateLimiterTest</span><span class="o">()</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kd">class</span> <span class="nc">InstanceHolder</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">        <span class="kd">static</span> <span class="kd">final</span> <span class="n">RateLimiterTest</span> <span class="n">instance</span> <span class="o">=</span> <span class="k">new</span> <span class="n">RateLimiterTest</span><span class="o">();</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">public</span> <span class="kd">static</span> <span class="n">RateLimiterTest</span> <span class="nf">getInstance</span><span class="o">()</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">InstanceHolder</span><span class="o">.</span><span class="na">instance</span><span class="o">;</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">public</span> <span class="n">String</span> <span class="nf">runHttpGet</span><span class="o">(</span><span class="n">String</span> <span class="n">url</span><span class="o">,</span> <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;&gt;</span> <span class="n">header</span><span class="o">)</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">rateLimiter</span><span class="o">.</span><span class="na">acquire</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">HttpRequest</span>
</span></span><span class="line"><span class="cl">                <span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">url</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">                <span class="o">.</span><span class="na">header</span><span class="o">(</span><span class="n">header</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">                <span class="o">.</span><span class="na">execute</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">                <span class="o">.</span><span class="na">body</span><span class="o">();</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.concurrent.*</span><span class="o">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">TestRate</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">InterruptedException</span><span class="o">,</span> <span class="n">ExecutionException</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">String</span> <span class="n">url</span> <span class="o">=</span> <span class="s">&#34;https://xxxxx&#34;</span><span class="o">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;&gt;</span> <span class="n">header</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">&lt;&gt;();</span>
</span></span><span class="line"><span class="cl">        <span class="n">header</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;Content-type&#34;</span><span class="o">,</span> <span class="n">Collections</span><span class="o">.</span><span class="na">singletonList</span><span class="o">(</span><span class="s">&#34;application/json&#34;</span><span class="o">));</span>
</span></span><span class="line"><span class="cl">        <span class="n">header</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;Access-Token&#34;</span><span class="o">,</span> <span class="n">Collections</span><span class="o">.</span><span class="na">singletonList</span><span class="o">(</span><span class="s">&#34;xxxxx&#34;</span><span class="o">));</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="n">List</span><span class="o">&lt;</span><span class="n">Callable</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;&gt;</span> <span class="n">tasks</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;&gt;();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">60</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="n">Callable</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">callable</span> <span class="o">=</span> <span class="o">()</span> <span class="o">-&gt;</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">                <span class="n">RateLimiterTest</span> <span class="n">instance</span> <span class="o">=</span> <span class="n">RateLimiterTest</span><span class="o">.</span><span class="na">getInstance</span><span class="o">();</span>
</span></span><span class="line"><span class="cl">                <span class="k">return</span> <span class="n">instance</span><span class="o">.</span><span class="na">runHttpGet</span><span class="o">(</span><span class="n">url</span><span class="o">,</span> <span class="n">header</span><span class="o">);</span>
</span></span><span class="line"><span class="cl">            <span class="o">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="n">tasks</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">callable</span><span class="o">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="n">ExecutorService</span> <span class="n">exec</span> <span class="o">=</span> <span class="n">Executors</span><span class="o">.</span><span class="na">newFixedThreadPool</span><span class="o">(</span><span class="mi">60</span><span class="o">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">List</span><span class="o">&lt;</span><span class="n">Future</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;&gt;</span> <span class="n">futures</span> <span class="o">=</span> <span class="n">exec</span><span class="o">.</span><span class="na">invokeAll</span><span class="o">(</span><span class="n">tasks</span><span class="o">);</span>
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="o">(</span><span class="n">Future</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">future</span> <span class="o">:</span> <span class="n">futures</span><span class="o">)</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">String</span> <span class="n">s</span> <span class="o">=</span> <span class="n">future</span><span class="o">.</span><span class="na">get</span><span class="o">();</span>
</span></span><span class="line"><span class="cl">            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">s</span><span class="o">);</span>
</span></span><span class="line"><span class="cl">        <span class="o">}</span>
</span></span><span class="line"><span class="cl">        <span class="n">exec</span><span class="o">.</span><span class="na">shutdown</span><span class="o">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
  <title>presto 自定义函数简述</title>
  <link>https://hpk.me/posts/presto-udf-simple/</link>
  <pubDate>Tue, 18 Apr 2023 14:16:42 &#43;0800</pubDate>
  <author>hpkaiq</author>
  <guid>https://hpk.me/posts/presto-udf-simple/</guid>
  <description><![CDATA[<p>presto自带unbase64函数某些时候会报错，所以想要自定义一个unbase64函数。</p>
<p>presto自带unbase64函数，用法如下。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">FROM_UTF8(from_base64(nickname))
</span></span></code></pre></td></tr></table>
</div>
</div><p>但是有些字符会报错。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">Query failed (#20220720_091551_00087_mkhun): Illegal base64 character -1a
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="idea新建maven项目">idea新建maven项目</h2>
<p>pom文件如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl">    <span class="nt">&lt;dependencies&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;dependency&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&lt;groupId&gt;</span>com.facebook.presto<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&lt;artifactId&gt;</span>presto-spi<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&lt;version&gt;</span>0.272<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/dependency&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;dependency&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&lt;groupId&gt;</span>com.google.guava<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&lt;artifactId&gt;</span>guava<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&lt;version&gt;</span>18.0<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/dependency&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/dependencies&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;build&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;plugins&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">                <span class="nt">&lt;groupId&gt;</span>org.apache.maven.plugins<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">                <span class="nt">&lt;artifactId&gt;</span>maven-jar-plugin<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">                <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">                    <span class="nt">&lt;classesDirectory&gt;</span>target/classes/<span class="nt">&lt;/classesDirectory&gt;</span>
</span></span><span class="line"><span class="cl">                    <span class="nt">&lt;archive&gt;</span>
</span></span><span class="line"><span class="cl">                        <span class="nt">&lt;manifest&gt;</span>
</span></span><span class="line"><span class="cl">                            <span class="nt">&lt;mainClass&gt;</span>com.alibaba.dubbo.container.Main<span class="nt">&lt;/mainClass&gt;</span>
</span></span><span class="line"><span class="cl">                            <span class="c">&lt;!-- 打包时 MANIFEST.MF文件不记录的时间戳版本 --&gt;</span>
</span></span><span class="line"><span class="cl">                            <span class="nt">&lt;useUniqueVersions&gt;</span>false<span class="nt">&lt;/useUniqueVersions&gt;</span>
</span></span><span class="line"><span class="cl">                            <span class="nt">&lt;addClasspath&gt;</span>true<span class="nt">&lt;/addClasspath&gt;</span>
</span></span><span class="line"><span class="cl">                            <span class="nt">&lt;classpathPrefix&gt;</span>lib/<span class="nt">&lt;/classpathPrefix&gt;</span>
</span></span><span class="line"><span class="cl">                        <span class="nt">&lt;/manifest&gt;</span>
</span></span><span class="line"><span class="cl">                        <span class="nt">&lt;manifestEntries&gt;</span>
</span></span><span class="line"><span class="cl">                            <span class="nt">&lt;Class-Path&gt;</span>.<span class="nt">&lt;/Class-Path&gt;</span>
</span></span><span class="line"><span class="cl">                        <span class="nt">&lt;/manifestEntries&gt;</span>
</span></span><span class="line"><span class="cl">                    <span class="nt">&lt;/archive&gt;</span>
</span></span><span class="line"><span class="cl">                <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">                <span class="nt">&lt;groupId&gt;</span>org.apache.maven.plugins<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">                <span class="nt">&lt;artifactId&gt;</span>maven-dependency-plugin<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">                <span class="nt">&lt;executions&gt;</span>
</span></span><span class="line"><span class="cl">                    <span class="nt">&lt;execution&gt;</span>
</span></span><span class="line"><span class="cl">                        <span class="nt">&lt;id&gt;</span>copy-dependencies<span class="nt">&lt;/id&gt;</span>
</span></span><span class="line"><span class="cl">                        <span class="nt">&lt;phase&gt;</span>package<span class="nt">&lt;/phase&gt;</span>
</span></span><span class="line"><span class="cl">                        <span class="nt">&lt;goals&gt;</span>
</span></span><span class="line"><span class="cl">                            <span class="nt">&lt;goal&gt;</span>copy-dependencies<span class="nt">&lt;/goal&gt;</span>
</span></span><span class="line"><span class="cl">                        <span class="nt">&lt;/goals&gt;</span>
</span></span><span class="line"><span class="cl">                        <span class="nt">&lt;configuration&gt;</span>
</span></span><span class="line"><span class="cl">                            <span class="nt">&lt;type&gt;</span>jar<span class="nt">&lt;/type&gt;</span>
</span></span><span class="line"><span class="cl">                            <span class="nt">&lt;includeTypes&gt;</span>jar<span class="nt">&lt;/includeTypes&gt;</span>
</span></span><span class="line"><span class="cl">                            <span class="nt">&lt;outputDirectory&gt;</span>
</span></span><span class="line"><span class="cl">                                ${project.build.directory}/lib
</span></span><span class="line"><span class="cl">                            <span class="nt">&lt;/outputDirectory&gt;</span>
</span></span><span class="line"><span class="cl">                        <span class="nt">&lt;/configuration&gt;</span>
</span></span><span class="line"><span class="cl">                    <span class="nt">&lt;/execution&gt;</span>
</span></span><span class="line"><span class="cl">                <span class="nt">&lt;/executions&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&lt;plugin&gt;</span>
</span></span><span class="line"><span class="cl">                <span class="nt">&lt;groupId&gt;</span>com.facebook.presto<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">                <span class="nt">&lt;artifactId&gt;</span>presto-maven-plugin<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">                <span class="nt">&lt;version&gt;</span>0.3<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl">                <span class="nt">&lt;extensions&gt;</span>true<span class="nt">&lt;/extensions&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&lt;/plugin&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/plugins&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/build&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="function开发">function开发</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">base64</span><span class="o">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">com.facebook.presto.common.type.StandardTypes</span><span class="o">;</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">com.facebook.presto.spi.function.Description</span><span class="o">;</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">com.facebook.presto.spi.function.ScalarFunction</span><span class="o">;</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">com.facebook.presto.spi.function.SqlType</span><span class="o">;</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.airlift.slice.Slice</span><span class="o">;</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.airlift.slice.Slices</span><span class="o">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">UnBase64Function</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="nd">@ScalarFunction</span><span class="o">(</span><span class="s">&#34;unBase64&#34;</span><span class="o">)</span> <span class="c1">// 固定参数，表示函数名的意思，也就我们在使用Presto的时候用的函数名
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="nd">@Description</span><span class="o">(</span><span class="s">&#34;base64解密&#34;</span><span class="o">)</span> <span class="c1">// 函数的注释
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="nd">@SqlType</span><span class="o">(</span><span class="n">StandardTypes</span><span class="o">.</span><span class="na">VARCHAR</span><span class="o">)</span> <span class="c1">// 表示数据类型
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="kd">public</span> <span class="kd">static</span> <span class="n">Slice</span> <span class="nf">unBase64</span><span class="o">(</span><span class="nd">@SqlType</span><span class="o">(</span><span class="n">StandardTypes</span><span class="o">.</span><span class="na">VARCHAR</span><span class="o">)</span> <span class="n">Slice</span> <span class="n">input</span><span class="o">)</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// 解码
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="n">String</span> <span class="n">res</span> <span class="o">=</span> <span class="s">&#34;&#34;</span><span class="o">;</span>
</span></span><span class="line"><span class="cl">        <span class="k">try</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">            <span class="kt">byte</span><span class="o">[]</span> <span class="n">decodeBytes</span> <span class="o">=</span> <span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">Base64</span><span class="o">.</span><span class="na">getDecoder</span><span class="o">().</span><span class="na">decode</span><span class="o">(</span><span class="n">input</span><span class="o">.</span><span class="na">toStringUtf8</span><span class="o">());</span>
</span></span><span class="line"><span class="cl">            <span class="n">res</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="n">decodeBytes</span><span class="o">,</span> <span class="s">&#34;utf-8&#34;</span><span class="o">);</span>
</span></span><span class="line"><span class="cl">        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">        <span class="o">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">Slices</span><span class="o">.</span><span class="na">utf8Slice</span><span class="o">(</span><span class="n">res</span><span class="o">);</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="plugin开发">plugin开发</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.Set</span><span class="o">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">base64.Base64Function</span><span class="o">;</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">base64.UnBase64Function</span><span class="o">;</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">com.facebook.presto.spi.Plugin</span><span class="o">;</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">com.google.common.collect.ImmutableSet</span><span class="o">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">PrestoUdfPlugin</span> <span class="kd">implements</span> <span class="n">Plugin</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="nd">@Override</span>
</span></span><span class="line"><span class="cl">    <span class="kd">public</span> <span class="n">Set</span><span class="o">&lt;</span><span class="n">Class</span><span class="o">&lt;?&gt;&gt;</span> <span class="n">getFunctions</span><span class="o">()</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">ImmutableSet</span><span class="o">.&lt;</span><span class="n">Class</span><span class="o">&lt;?&gt;&gt;</span><span class="n">builder</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">                <span class="c1">// 添加插件class
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>                <span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">UnBase64Function</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">                <span class="o">.</span><span class="na">build</span><span class="o">();</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="加载plugin">加载plugin</h2>
<p>在src/main/resources下创建目录META-INF，再在META-INF目录下创建services目录，注意下图项目结构中META-INF是父目录 services是子目录，只是idea合并显示了，不是说文件夹名里面有点 “.” 。然后创建文件com.facebook.presto.spi.Plugin，文件内容为plugin的全类名。
例如本例：<code>PrestoUdfPlugin</code></p>
<h2 id="上线">上线</h2>
<ol>
<li>maven打包。</li>
<li>在所有presto节点服务器的presto安装目录${PRESTO_HOME}/plugin下新建一个my_plugin目录。</li>
<li>上传jar包，及相关依赖包（在lib目录下）到所有服务器新建的my_plugin目录下。</li>
<li>重启presto： ${PRESTO_HOME}/bin/launcher restart。</li>
</ol>
<h1 id="项目结构">项目结构</h1>
<p><figure><a class="lightgallery" href="https://m.360buyimg.com/babel/jfs/t1/2081/12/19574/60306/62d7d4afEe88e1e4b/e23c77b2aa3d6304.png" data-thumbnail="https://m.360buyimg.com/babel/jfs/t1/2081/12/19574/60306/62d7d4afEe88e1e4b/e23c77b2aa3d6304.png" data-sub-html="<h2>结构</h2><p>结构</p>"></a><figcaption class="image-caption">结构</figcaption>
  </figure></p>
<p>参考：<a href="https://blog.csdn.net/Mrerlou/article/details/119997884" title="【presto】方法二：presto实现自定义UDF函数"target="_blank" rel="external nofollow noopener noreferrer">【presto】方法二：presto实现自定义UDF函数<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></p>]]></description>
</item>
<item>
  <title>阿里Druid连接池连接不释放、连接泄漏排查</title>
  <link>https://hpk.me/posts/druid-connect-not-free/</link>
  <pubDate>Mon, 17 Apr 2023 21:12:25 &#43;0800</pubDate>
  <author>hpkaiq</author>
  <guid>https://hpk.me/posts/druid-connect-not-free/</guid>
  <description><![CDATA[<p>配置好下面三个属性。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="c">&lt;!-- 超过时间限制是否回收 --&gt;</span>  
</span></span><span class="line"><span class="cl"><span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&#34;removeAbandoned&#34;</span> <span class="na">value=</span><span class="s">&#34;true&#34;</span> <span class="nt">/&gt;</span>  
</span></span><span class="line"><span class="cl"><span class="c">&lt;!-- 超时时间；单位为秒。180秒=3分钟   --&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&#34;removeAbandonedTimeout&#34;</span> <span class="na">value=</span><span class="s">&#34;180&#34;</span> <span class="nt">/&gt;</span>  
</span></span><span class="line"><span class="cl"><span class="c">&lt;!-- 关闭abanded连接时输出错误日志   --&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&#34;logAbandoned&#34;</span> <span class="na">value=</span><span class="s">&#34;true&#34;</span> <span class="nt">/&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>查看日志文件。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl">2019-04-17 17:10:05:140 - ERROR [Druid-ConnectionPool-Destroy-1559154670] - com.alibaba.druid.pool.DruidDataSource com.alibaba.druid.pool.DruidDataSource.removeAbandoned:2666 abandon connection, owner thread: http-nio-8085-exec-1, connected at : 1555491605100, open stackTrace
</span></span><span class="line"><span class="cl">	at java.lang.Thread.getStackTrace(Thread.java:1559)
</span></span><span class="line"><span class="cl">	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1313)
</span></span><span class="line"><span class="cl">	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1235)
</span></span><span class="line"><span class="cl">	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1225)
</span></span><span class="line"><span class="cl">	at com.xxxx.xx.common.util.JdbcUtil.linkTrace(JdbcUtil.java:39)
</span></span><span class="line"><span class="cl">	at com.xxxx.xx.xxxxx.service.impl.DashboardServiceImpl.getExpenTrend(DashboardServiceImpl.java:263)
</span></span><span class="line"><span class="cl">	at com.xxxx.xx.xxxxx.service.impl.DashboardServiceImpl.getBossData(DashboardServiceImpl.java:58)
</span></span><span class="line"><span class="cl">	at com.xxxx.xx.xxxxx.controller.DashboardController.getBossData(DashboardController.java:43)
</span></span></code></pre></td></tr></table>
</div>
</div><p>日志里查找<code>removeAbandoned</code>关键字，找到自己哪个方法获取连接后没有关闭资源，排查原因。</p>]]></description>
</item>
<item>
  <title>spring cloud java反向代理访问阿里云OSS私有资源</title>
  <link>https://hpk.me/posts/spring-proxy-oss/</link>
  <pubDate>Mon, 17 Apr 2023 20:43:10 &#43;0800</pubDate>
  <author>hpkaiq</author>
  <guid>https://hpk.me/posts/spring-proxy-oss/</guid>
  <description><![CDATA[<p>最近用到阿里云oss，有阿里云服务器，通过代理内网访问可以实现免除OSS流量费，查到很多nginx反向代理的教程，但是纯java实现没有找到，感觉可以试一试。</p>
<p>（一）
首先要解决反向代理的问题，搜到<code>org.mitre.dsmiley.httpproxy.ProxyServlet</code>可解决。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;dependency&gt;</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&lt;groupId&gt;</span>org.mitre.dsmiley.httpproxy<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&lt;artifactId&gt;</span>smiley-http-proxy-servlet<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&lt;version&gt;</span>1.11<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/dependency&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="nd">@Configuration</span>
</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MyConfig</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="nd">@Bean</span>
</span></span><span class="line"><span class="cl">    <span class="kd">public</span> <span class="n">ServletRegistrationBean</span> <span class="nf">servletRegistrationAliBean01</span><span class="o">()</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="n">ServletRegistrationBean</span> <span class="n">oss</span>  <span class="o">=</span> <span class="k">new</span> <span class="n">ServletRegistrationBean</span><span class="o">(</span><span class="k">new</span> <span class="n">ProxyServlet</span><span class="o">(),</span> <span class="s">&#34;/ali/bucket_name/*&#34;</span><span class="o">);</span><span class="c1">//修改为自己的bucket_name
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="n">oss</span><span class="o">.</span><span class="na">setName</span><span class="o">(</span><span class="s">&#34;bucket_name&#34;</span><span class="o">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">oss</span><span class="o">.</span><span class="na">addInitParameter</span><span class="o">(</span><span class="s">&#34;targetUri&#34;</span><span class="o">,</span> <span class="s">&#34;http://bucket_name.oss-cn-beijing.aliyuncs.com&#34;</span><span class="o">);</span><span class="c1">//本地测试环境用外网地址，线上改成内网访问的地址
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="n">oss</span><span class="o">.</span><span class="na">addInitParameter</span><span class="o">(</span><span class="n">ProxyServlet</span><span class="o">.</span><span class="na">P_LOG</span><span class="o">,</span> <span class="s">&#34;true&#34;</span><span class="o">);</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">oss</span><span class="o">;</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>（二）
Controller配置如下，转发到自己配置的反向代理</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">@RestController
</span></span><span class="line"><span class="cl">@RefreshScope
</span></span><span class="line"><span class="cl">@RequestMapping(&#34;/api/es&#34;)
</span></span><span class="line"><span class="cl">public class TestController {
</span></span><span class="line"><span class="cl">     @RequestMapping(&#34;/static/**&#34;)
</span></span><span class="line"><span class="cl">    public void testVideoOne(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException, URISyntaxException {
</span></span><span class="line"><span class="cl">        String resourcePath = request.getRequestURI().replace(&#34;/api/es/static&#34;,&#34;&#34;);
</span></span><span class="line"><span class="cl">        HeaderUtil.setHeaderOwn(request,resourcePath);
</span></span><span class="line"><span class="cl">        request.getRequestDispatcher(&#34;/ali&#34; + resourcePath).forward(request, response);
</span></span><span class="line"><span class="cl">    }
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></td></tr></table>
</div>
</div><p>（三）
其中为request设置Header以认证OSS访问的HeaderUtil如下，其中有OSS Authorization计算的java实现，用java的反射在request中添加Header信息。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span><span class="lnt">82
</span><span class="lnt">83
</span><span class="lnt">84
</span><span class="lnt">85
</span><span class="lnt">86
</span><span class="lnt">87
</span><span class="lnt">88
</span><span class="lnt">89
</span><span class="lnt">90
</span><span class="lnt">91
</span><span class="lnt">92
</span><span class="lnt">93
</span><span class="lnt">94
</span><span class="lnt">95
</span><span class="lnt">96
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">import org.apache.commons.codec.binary.Base64;
</span></span><span class="line"><span class="cl">import org.apache.tomcat.util.http.MimeHeaders;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">import javax.crypto.Mac;
</span></span><span class="line"><span class="cl">import javax.crypto.spec.SecretKeySpec;
</span></span><span class="line"><span class="cl">import javax.servlet.http.HttpServletRequest;
</span></span><span class="line"><span class="cl">import java.lang.reflect.Field;
</span></span><span class="line"><span class="cl">import java.net.URISyntaxException;
</span></span><span class="line"><span class="cl">import java.nio.charset.Charset;
</span></span><span class="line"><span class="cl">import java.security.InvalidKeyException;
</span></span><span class="line"><span class="cl">import java.security.NoSuchAlgorithmException;
</span></span><span class="line"><span class="cl">import java.text.SimpleDateFormat;
</span></span><span class="line"><span class="cl">import java.util.Date;
</span></span><span class="line"><span class="cl">import java.util.Locale;
</span></span><span class="line"><span class="cl">import java.util.TimeZone;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">public class HeaderUtil {
</span></span><span class="line"><span class="cl">    /**
</span></span><span class="line"><span class="cl">     * 给request加入Header信息，验证OSS访问权限
</span></span><span class="line"><span class="cl">     * @param request
</span></span><span class="line"><span class="cl">     * @throws URISyntaxException
</span></span><span class="line"><span class="cl">     */
</span></span><span class="line"><span class="cl">    public static void setHeaderOwn(HttpServletRequest request,String resourcePath) throws URISyntaxException {
</span></span><span class="line"><span class="cl">        SimpleDateFormat sdf = new SimpleDateFormat(&#34;EEE, dd MMM yyyy HH:mm:ss &#39;GMT&#39;&#34;, Locale.US);
</span></span><span class="line"><span class="cl">        sdf.setTimeZone(TimeZone.getTimeZone(&#34;GMT&#34;));
</span></span><span class="line"><span class="cl">        String date_GMT = sdf.format(new Date());
</span></span><span class="line"><span class="cl">        String data = request.getMethod() + &#34;\n&#34;
</span></span><span class="line"><span class="cl">                + &#34;\n&#34;
</span></span><span class="line"><span class="cl">                + &#34;\n&#34;
</span></span><span class="line"><span class="cl">                + date_GMT + &#34;\n&#34;
</span></span><span class="line"><span class="cl">                + resourcePath;
</span></span><span class="line"><span class="cl">        String signature = genHMAC(&#34;AccessKeySecret&#34;, data);//AccessKeySecret改成自己的
</span></span><span class="line"><span class="cl">        reflectSetParam(request, &#34;Authorization&#34;, &#34;OSS AccessKeyId:&#34; + signature);//AccessKeyId改成自己的
</span></span><span class="line"><span class="cl">        reflectSetParam(request, &#34;Date&#34;, date_GMT);
</span></span><span class="line"><span class="cl">    }
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    /**
</span></span><span class="line"><span class="cl">     * 反射修改header信息，key-value键值对加入到header中
</span></span><span class="line"><span class="cl">     *
</span></span><span class="line"><span class="cl">     * @param request
</span></span><span class="line"><span class="cl">     * @param key
</span></span><span class="line"><span class="cl">     * @param value
</span></span><span class="line"><span class="cl">     */
</span></span><span class="line"><span class="cl">    private static void reflectSetParam(HttpServletRequest request, String key, String value) {
</span></span><span class="line"><span class="cl">        Class&lt;? extends HttpServletRequest&gt; requestClass = request.getClass();
</span></span><span class="line"><span class="cl">        // System.out.println(&#34;request实现类=&#34;+requestClass.getName());
</span></span><span class="line"><span class="cl">        try {
</span></span><span class="line"><span class="cl">            Field request1 = requestClass.getDeclaredField(&#34;request&#34;);
</span></span><span class="line"><span class="cl">            request1.setAccessible(true);
</span></span><span class="line"><span class="cl">            Object o = request1.get(request);
</span></span><span class="line"><span class="cl">            Field coyoteRequest = o.getClass().getDeclaredField(&#34;coyoteRequest&#34;);
</span></span><span class="line"><span class="cl">            coyoteRequest.setAccessible(true);
</span></span><span class="line"><span class="cl">            Object o1 = coyoteRequest.get(o);
</span></span><span class="line"><span class="cl">            // System.out.println(&#34;coyoteRequest实现类=&#34;+o1.getClass().getName());
</span></span><span class="line"><span class="cl">            Field headers = o1.getClass().getDeclaredField(&#34;headers&#34;);
</span></span><span class="line"><span class="cl">            headers.setAccessible(true);
</span></span><span class="line"><span class="cl">            MimeHeaders o2 = (MimeHeaders) headers.get(o1);
</span></span><span class="line"><span class="cl">            o2.addValue(key).setString(value);
</span></span><span class="line"><span class="cl">        } catch (Exception e) {
</span></span><span class="line"><span class="cl">            e.printStackTrace();
</span></span><span class="line"><span class="cl">        }
</span></span><span class="line"><span class="cl">    }
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    /**
</span></span><span class="line"><span class="cl">     * HmacSHA1 Base64加密
</span></span><span class="line"><span class="cl">     * @param key
</span></span><span class="line"><span class="cl">     * @param data
</span></span><span class="line"><span class="cl">     * @return
</span></span><span class="line"><span class="cl">     */
</span></span><span class="line"><span class="cl">    public static String genHMAC(String key, String data) {
</span></span><span class="line"><span class="cl">        byte[] result = null;
</span></span><span class="line"><span class="cl">        try {
</span></span><span class="line"><span class="cl">            //根据给定的字节数组构造一个密钥,第二参数指定一个密钥算法的名称
</span></span><span class="line"><span class="cl">            SecretKeySpec signinKey = new SecretKeySpec(key.getBytes(), &#34;HmacSHA1&#34;);
</span></span><span class="line"><span class="cl">            //生成一个指定 Mac 算法 的 Mac 对象
</span></span><span class="line"><span class="cl">            Mac mac = Mac.getInstance(&#34;HmacSHA1&#34;);
</span></span><span class="line"><span class="cl">            //用给定密钥初始化 Mac 对象
</span></span><span class="line"><span class="cl">            mac.init(signinKey);
</span></span><span class="line"><span class="cl">            //完成 Mac 操作
</span></span><span class="line"><span class="cl">            byte[] rawHmac = mac.doFinal(data.getBytes(Charset.forName(&#34;UTF-8&#34;)));
</span></span><span class="line"><span class="cl">            result = Base64.encodeBase64(rawHmac);
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        } catch (NoSuchAlgorithmException e) {
</span></span><span class="line"><span class="cl">            System.err.println(e.getMessage());
</span></span><span class="line"><span class="cl">        } catch (InvalidKeyException e) {
</span></span><span class="line"><span class="cl">            System.err.println(e.getMessage());
</span></span><span class="line"><span class="cl">        }
</span></span><span class="line"><span class="cl">        if (null != result) {
</span></span><span class="line"><span class="cl">            return new String(result);
</span></span><span class="line"><span class="cl">        } else {
</span></span><span class="line"><span class="cl">            return null;
</span></span><span class="line"><span class="cl">        }
</span></span><span class="line"><span class="cl">    }
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></td></tr></table>
</div>
</div><p>最后访问的地址例如：
http://127.0.0.1:8081/api/es/static/bucket_name/object_name
可以加个拦截器做个登陆验证。</p>]]></description>
</item>
</channel>
</rss>
