<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>PME-Blog</title>
    <link>https://hpkaiq.github.io/</link>
    <description>PME-Blog 难得自在</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>hpkaiq@qq.com (hpkaiq)</managingEditor>
      <webMaster>hpkaiq@qq.com (hpkaiq)</webMaster><lastBuildDate>Mon, 17 Apr 2023 21:29:55 &#43;0800</lastBuildDate>
      <atom:link href="https://hpkaiq.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
  <title>spark 读取 hive date 分区表 奇怪的报错</title>
  <link>https://hpkaiq.github.io/posts/spark-hive-partition-issue/</link>
  <pubDate>Mon, 17 Apr 2023 21:29:55 &#43;0800</pubDate>
  <author>hpkaiq</author>
  <guid>https://hpkaiq.github.io/posts/spark-hive-partition-issue/</guid>
  <description><![CDATA[<p>当 hive 表的分区字段 是 date 类型时，用如下方式读取会发生报错。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-scala" data-lang="scala"><span class="line"><span class="cl"><span class="k">val</span> <span class="n">targetDay</span> <span class="k">=</span> <span class="s">&#34;2020-08-20&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">spark</span><span class="o">.</span><span class="n">read</span><span class="o">.</span><span class="n">table</span><span class="o">(</span><span class="n">tableName</span><span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">.</span><span class="n">where</span><span class="o">(</span><span class="s">s&#34;targetday in (&#34;</span> <span class="o">+</span>
</span></span><span class="line"><span class="cl">      <span class="s">s&#34;date_sub(&#39;</span><span class="si">$targetDay</span><span class="s">&#39;,59),&#34;</span> <span class="o">+</span>
</span></span><span class="line"><span class="cl">      <span class="s">s&#34;date_sub(&#39;</span><span class="si">$targetDay</span><span class="s">&#39;,49),&#34;</span> <span class="o">+</span>
</span></span><span class="line"><span class="cl">      <span class="s">s&#34;date_sub(&#39;</span><span class="si">$targetDay</span><span class="s">&#39;,39),&#34;</span> <span class="o">+</span>
</span></span><span class="line"><span class="cl">      <span class="s">s&#34;date_sub(&#39;</span><span class="si">$targetDay</span><span class="s">&#39;,29),&#34;</span> <span class="o">+</span>
</span></span><span class="line"><span class="cl">      <span class="s">s&#34;date_sub(&#39;</span><span class="si">$targetDay</span><span class="s">&#39;,14),&#34;</span> <span class="o">+</span>
</span></span><span class="line"><span class="cl">      <span class="s">s&#34;date_sub(&#39;</span><span class="si">$targetDay</span><span class="s">&#39;,6),&#34;</span> <span class="o">+</span>
</span></span><span class="line"><span class="cl">      <span class="s">s&#34;date_sub(&#39;</span><span class="si">$targetDay</span><span class="s">&#39;,5),&#34;</span> <span class="o">+</span>
</span></span><span class="line"><span class="cl">      <span class="s">s&#34;date_sub(&#39;</span><span class="si">$targetDay</span><span class="s">&#39;,4),&#34;</span> <span class="o">+</span>
</span></span><span class="line"><span class="cl">      <span class="s">s&#34;date_sub(&#39;</span><span class="si">$targetDay</span><span class="s">&#39;,3),&#34;</span> <span class="o">+</span>
</span></span><span class="line"><span class="cl">      <span class="s">s&#34;date_sub(&#39;</span><span class="si">$targetDay</span><span class="s">&#39;,2),&#34;</span> <span class="o">+</span>
</span></span><span class="line"><span class="cl">      <span class="s">s&#34;date_sub(&#39;</span><span class="si">$targetDay</span><span class="s">&#39;,1),&#34;</span> <span class="o">+</span>
</span></span><span class="line"><span class="cl">      <span class="s">s&#34;date_sub(&#39;</span><span class="si">$targetDay</span><span class="s">&#39;,0))&#34;</span> <span class="o">).</span><span class="n">show</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>targetday 为 表的分区字段，date类型。
当 in 后面 的日期个数大于 10 时就会报错，小于等于 10 时都不会报错。奇怪的现象。。。
targetday 为 string 类型不会有此错误。</p>]]></description>
</item>
<item>
  <title>Apache Kudu 写入数据定期出问题</title>
  <link>https://hpkaiq.github.io/posts/kudu-periodic-issues/</link>
  <pubDate>Mon, 17 Apr 2023 21:23:09 &#43;0800</pubDate>
  <author>hpkaiq</author>
  <guid>https://hpkaiq.github.io/posts/kudu-periodic-issues/</guid>
  <description><![CDATA[<p>线上项目出现一个很奇怪的问题，数据经过Spark程序消费Kafka写入Kudu，出现Kudu Master连接超时，这个问题开始排查不出原因，有点头大，只能采用下下策，重启Spark程序，出现过几次后， 我记录了出现的时间，发现每次出现时间有个固定周期，一周，有规律就是最大的好消息，感觉离发现真相不远了，果然网上有这方面的问题讨论，虽说以前也去网上搜索过相关问题，毕竟Kudu相比于Hive、HBase还是小众了一点。。。是Kudu Java Client的问题，使用1.5以上版本就没问题了。</p>
<p>参考：<a href="https://blog.csdn.net/u011489205/article/details/79173537"target="_blank" rel="external nofollow noopener noreferrer">关于kudu使用的一些问题及解决办法<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></p>]]></description>
</item>
<item>
  <title>spark yarn cluster模式下log4j日志的配置</title>
  <link>https://hpkaiq.github.io/posts/spark-yarn-cluster-log4j/</link>
  <pubDate>Mon, 17 Apr 2023 21:19:43 &#43;0800</pubDate>
  <author>hpkaiq</author>
  <guid>https://hpkaiq.github.io/posts/spark-yarn-cluster-log4j/</guid>
  <description><![CDATA[<p>最近线上的spark项目日志文件急剧增加，磁盘顶不住了啊，解决日志文件问题，参考下面三篇文章，基本就可以搞明白了。</p>
<ol>
<li><a href="https://www.jianshu.com/p/0fe51185eeba"target="_blank" rel="external nofollow noopener noreferrer">Spark日志过大导致磁盘溢出问题解决方案<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></li>
<li><a href="http://www.cnblogs.com/163yun/p/9882530.html"target="_blank" rel="external nofollow noopener noreferrer">Spark日志配置及问题排查方式。<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></li>
<li><a href="https://blog.csdn.net/ZMC921/article/details/80238392"target="_blank" rel="external nofollow noopener noreferrer">Spark log4j 日志配置详解<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></li>
</ol>
<p>以上内容转载自网络，如有侵权，请联系删除。</p>]]></description>
</item>
<item>
  <title>五十个电子书搜索网</title>
  <link>https://hpkaiq.github.io/posts/book-search-website/</link>
  <pubDate>Mon, 17 Apr 2023 21:15:15 &#43;0800</pubDate>
  <author>hpkaiq</author>
  <guid>https://hpkaiq.github.io/posts/book-search-website/</guid>
  <description><![CDATA[<p><em>转载自网络，不保证可用性及是否拥有版权，仅供分享，如有法律纠纷，请联系删除。</em></p>
<h1 id="国内网站"><strong>国内网站</strong></h1>
<p>1、鸠摩搜书</p>
<p>网址：https://www.jiumodiary.com/</p>
<p>一个强大的搜书神站，无论是什么类型的书籍，只要你知道书名，就可以轻松的搜到你想要书籍。页面简单明了，书籍种类繁多，格式多种多样，有mobi格式、pdf格式、word格式、txt格式等。关键是可以无限下载，无需注册登录。</p>
<p>2、周读</p>
<p>网址：http://www.ireadweek.com/index.php/Index/index.html</p>
<p>周读是一个提供优质的epud,mobi,pdf,txt电子书下载和分享的网站，帮助不知道读什么书的用户，选择值得读的好书籍，该网站提供多种书籍分类，涵盖了大多数的可读书籍。</p>
<p>3、我的小书屋</p>
<p>网址：http://mebook.cc/</p>
<p>免费无广告、电子书的质量很好，图书都是经过站长精挑细选的。网站分为畅销小说、网络小说、合集资源、多看专区、杂志期刊、漫画、工具书、原版书籍、轻小说等模块。站长每天都会推荐更新几本书，书太多不知道读什么，就试试站长推荐的吧。</p>
<p>4、书格</p>
<p>网址： <a href="https://shuge.org/"target="_blank" rel="external nofollow noopener noreferrer">https://shuge.org/<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></p>
<p>书格是一个自由开放的在线古籍图书馆，致力于开放式分享、介绍、推荐古本（四九以前的影像本）PDF；网站致力于为古籍的保护与数字化传播贡献。</p>
<p>5、西林街搜索</p>
<p>网址：http://www.xilinjie.com/</p>
<p>专注于网盘、视频、文库（文档、古籍、专业书籍、电子书PDF、ePub、Mobi等格式）、学术（各种期刊、论文、学报等）和Mooc（在线课程、学习、视频教程）等资源的搜索。</p>
<p>6、好读</p>
<p>网址：http://haodoo.net</p>
<p>免费的线上繁体中文图书馆，可在线阅读及下载，可下载的格式有：updb，pdb，prc，epub。</p>
<p>7、图灵社区</p>
<p>网址：http://www.ituring.com.cn/</p>
<p>图灵社区主要专注于科技书籍的出版，包括计算机、数学统计、科普等领域，提供免费和付费的电子书。用户可以使用网银或者支付宝的购买方式，大部分电子书同时提供了三种阅读方式：在线阅读、MOBI 推送、PDF 下载，部分书籍只提供其中部分格式。</p>
<p>8、盘搜</p>
<p>网址：http://www.pansoso.com/</p>
<p>一个老牌网盘搜索工具，功能非常强大，界面非常简洁。每天都有更新，不同达人分享自己的“盘中资源”！盘搜不存储任何网盘内容，但是资源非常丰富，无论是工作还是学习都必备。</p>
<p>9、苦瓜书盘</p>
<p>网址：https://kgbook.com/</p>
<p>苦瓜书盘,电子书分享的平台。适合电纸书阅读的6寸pdf及mobi格式电子书制作技术的网站。</p>
<p>10、新浪爱问共享资料</p>
<p>网址：http://ishare.iask.sina.com.cn/</p>
<p>新浪爱问共享资料是新浪旗下的在线资料分享站，免费高速上传或下载各类资源，内容涉及教育资源、专业资料、IT的资料、娱乐生活、经济管理、办公文书、游戏资料等。如果你要寻找偏学术的资料，所有地方都找不到，可以来这里试试，一般为扫描版PDF。</p>
<p>11、E书联盟</p>
<p>网址：http://www.book118.com/</p>
<p>E书联盟是一个庞大的免费中文电子书下载站，提供各类电子书下载，其中含比较专业的电子图书，提供部分电子书在线阅读。</p>
<p>12、云海电子图书馆</p>
<p>网址：http://www.pdfbook.cn/</p>
<p>云海电子图书馆是致力于pdf电子书的专业网站,提供各门类pdf电子书下载及高清pdf电子书。</p>
<p>13、万千集合站</p>
<p>网址：http://www.hejizhan.com/html/search</p>
<p>包含非常多的教材类相关电子书籍，搜索后直接显示下载链接。搜索结果基本涵盖了所有版本的电子教材、习题详解等。如果上大学时有这种资源，就省下好多买教材、习题解答的钱了。</p>
<p>14、蚂蚁搜书</p>
<p>网址：http://book.mybanshu.win/</p>
<p>IT书更多的资源网站，支持下载，不支持kindle推送。注册需要加微信索要邀请码，也是管理很严格了。</p>
<p>15、书语者</p>
<p>网址：https://book.shuyuzhe.com/</p>
<p>书语者电子图书馆，一个搜书网站，让你快速找到想要的书籍！</p>
<p>16、计算机书控</p>
<p>网址：http://bestcbooks.com/</p>
<p>这个网站可谓是计算机专业的福音，这里包含许多优秀的计算机书籍下载。无论是英文原版还是中文这里都有。</p>
<p>17、影印古籍资料</p>
<p>网址：https://sou-yun.com/eBookIndex.aspx</p>
<p>提供7000+种古籍资料的网上阅读和PDF格式下载服务。</p>
<p>18、知轩藏书</p>
<p>网址：http://www.zxcs8.com/</p>
<p>这是一个小说网站，在这里你可以找到你想要的小说。</p>
<p>19、国学网</p>
<p>地址：http://www.guoxue.com/</p>
<p>一家在国学传播领域独具特色的文化创意企业，主要从事古籍数字化研究、网络文献检索开发和网站建设，是中国最大的专业古籍电子文献数据公司之一。</p>
<p>20、国家数字图书馆</p>
<p>网址： <a href="http://www.nlc.gov.cn/index.htm"target="_blank" rel="external nofollow noopener noreferrer">http://www.nlc.gov.cn/index.htm<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></p>
<p>大量在线资源、子数据库、可以在线阅读海量电子书，需要注册（实名注册、需要身份证号）。国图购买了大量资源，有账号，便可在线阅读或者下载，版权期限内的图书只能读前两章，民国图书和古籍则可阅读全部内容。</p>
<p>21、PDF之家</p>
<p>网址： <a href="http://www.pdfzj.com/"target="_blank" rel="external nofollow noopener noreferrer">http://www.pdfzj.com/<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></p>
<p>PDF之家，做中国最好的pdf资源站，致力最全最新的pdf杂志、期刊杂志、电子杂志、电子图书的免费分享和下载服务。</p>
<p>22、我爱读电子书</p>
<p>网址：http://www.woaidu.org/</p>
<p>我爱读电子书是权威电子书搜索引擎，可以使用我爱读电子书快速的找到自己喜欢的电子书，也可以通过书榜了解最新最热门的书，随时随地畅想自己喜欢的书。</p>
<p>23、高清杂志网</p>
<p>网址：http://www.gqzzw.com/</p>
<p>高清杂志网提供杂志国内热门原版高清电子杂志下载服务,目前有财经理财、电脑数码、故事传奇、婚姻家庭、健康养生、教育教学、经济法律、科技科普、旅游民俗、女性杂志等等。</p>
<p>24、超星电子书</p>
<p>网址：http://www.chaoxing.com</p>
<p>40万电子书，注册后可以在线或使用客户端阅读海量书籍。若在教育网中，推荐包库网址 ，可以将PDG格式电子书下载到本机上离线阅读。pdg如何转成pdf，请看百度经验 。该站共享资料页也有大量资源。</p>
<p>25、走读派</p>
<p>地址：http://zoudupai.com</p>
<p>瀑布流电子书网站，支持下载和推送，注册登陆后无其他限制，但是书不多，上传资源需要先申请。资源质量有待优化。其书评系统 #书瓦台# 形式接近微博。</p>
<p>26、掌上书苑</p>
<p>地址：https://www.cnepub.com/</p>
<p>Epub格式电子书下载站，下载和推送均为付费服务，但是可以免费在线阅读</p>
<p>27、众人搜索网</p>
<p>网址：http://dianzishu.renrensousuo.com/</p>
<p>一个电子书搜索功能的网站，可以同时搜索各类电子书、电子小说等。</p>
<p>28、胖次搜索</p>
<p>网址：https://www.panc.cc/</p>
<p>胖次的搜索结果需要配合繁体字才能有最佳效果，整体来说胖次还蛮好用的，连隐秘绝迹的讲座录音/笔记都有，这个必须给点个赞！界面做的也挺简洁，资源方面说实话也够看了。胖次可搜索影音视频、音乐歌曲、小说文档、程序App、图片壁纸、压缩文件BT种子等资源；胖次搜索如果是无效资源，会显示出来，这个很方便。</p>
<p>29、盘多多</p>
<p>网址：http://www.panduoduo.net/</p>
<p>热门资源、专业资源方面出来的结果都很棒。office2016，各科目的文献资料都有，只要点击链接，就能进入详细页面进行下载，在页面下方，也列出了其他相关资源，全站无诱导下载的假按钮，真心不错。小问题：资源最丰富，但是偶尔不稳定。</p>
<p>30、去转盘网</p>
<p>网址：http://www.quzhuanpan.com/</p>
<p>去转盘有着风景宜人的界面，是一个网盘搜索引擎，可以搜索bt和网盘资源还有资源分享等功能，搜索类型主要有影视、音乐、电子书、种子、软件等各种资源，搜索网盘为百度网盘。同时开发了PC端和app客户端，链接龙轩导航、哔哩哔哩、咪咕鱼等网站，功能十分强大。</p>
<p>31、麦库搜索</p>
<p>网址：http://huisou.me/</p>
<p>麦库搜索界面相当简约，但不影响其强大的搜索功能。麦库是利用Google创建的一系列垂直搜索引擎，所以Google的一些使用技巧同样适合于麦库搜索。麦库数据来源：百度网盘，新浪微盘等。</p>
<p>32、特百度</p>
<p>网址：http://www.tebaidu.com/</p>
<p>特百度云提供百度云旗下的百度网盘搜索下载百度网盘的资源，本站也支持百度网盘登陆，百度网盘是目前受欢迎的T级超大免费网盘，注册用户过亿。</p>
<p>33、史莱姆搜索</p>
<p>网址：http://www.slimego.cn/</p>
<p>最丰富的学习资料库,收集整理了大量免费资源,教学资源,百度云资源,网盘资源。包含主流的资源搜索外,还能找到各行业细分的学习资源。</p>
<h1 id="国外网站"><strong>国外网站</strong></h1>
<p>34、Library Genesis</p>
<p>网址：http://gen.lib.rus.ec/</p>
<p>这个界面简洁明了，输入你想要找的关键词或者全名，就可以搜到该领域的一些电子书籍。一些科研的电子书，还有科研论文、小说、喜剧、行业标准、杂志啥的都可以搜搜试试。从这个网站搜索可以搜出一本书的好多版本，大家根据自己的需求下载。</p>
<p>35、Project Gutenberg</p>
<p>网址：http://www.gutenberg.org/</p>
<p>它是国外一个知名的电子书免费分享网站，旨在基于互联网，大量提供版权过期而进入公有领域书籍的一项协作计划，最初是在1971年7月由Michael Hart发起的。登堡计划是互联网上最早的免费电子书网站。它们拥有众多的志愿者，藏书量超过4万本。书海茫茫，找本好书不容易，而古登堡的书籍下载排行榜有很高的参考价值。</p>
<p>36、ebookee</p>
<p>网址： <a href="https://ebookee.org/"target="_blank" rel="external nofollow noopener noreferrer">https://ebookee.org/<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a></p>
<p>该站书籍种类丰富，基本专业书籍都可找到。网站是按照主题分类的，特别方便查找！</p>
<p>37、Planet eBook</p>
<p>网址：https://www.planetebook.com/</p>
<p>这个网站是免费的古典文学的家园。这里所有的小说和书籍是完全免费下载和共享，图里看到的1984，The Great Gastsby，只要点击图标，就可以很快下载下来。</p>
<p>38、HathiTrust Digital Library</p>
<p>网址：https://www.hathitrust.org/</p>
<p>HathiTrust是学术和研究机构合作，提供一个收集世界各地的数以百万计的图书数字化图书馆。可在线阅读，也可下载。</p>
<p>39、Wikibooks</p>
<p>网址：https://en.wikibooks.org/wiki/Main_Page</p>
<p>Wikibooks，维基教科书，内容开放的教科书及手册集。是维基媒体的一项工程，也是维基百科的姊妹计划，于2003年7月10日开放。 此计划收集自由的教科书，目录或其他用户自己编辑的书。</p>
<p>40、Get Free e-Books</p>
<p>网址：https://www.getfreeebooks.com/</p>
<p>免费电子图书网站，下载书籍也是完全免费。在这个网站上，你找到的电子书收集来自各地或由创始人亲自编制。</p>
<p>41、BookYards</p>
<p>网址：https://www.bookyards.com/en/welcome</p>
<p>Bookyards有22626本书籍，而且图书量随时在增加。它还有四万多个外部网站链接，将近五千个新闻和博客的链接，三万多个电子书链接和访问数以百计的网上图书馆。</p>
<p>42、ePUBee</p>
<p>网址：http://cn.epubee.com/books/</p>
<p>这个网站应该是全球最大的免费电子书库，超过10万本书籍，50万个文件版本，总能找到你喜欢的适合阅读器的电子书文件。品类齐全，搜索功能强大，图书管理方便。</p>
<p>43、FreeBookSpot</p>
<p>网址：http://www.freebookspot.es/</p>
<p>FreeBookSpot是一个免费英文电子书大全网站，它提供有4485本免费电子书，分为96个分类，高达71.97GB。你可以通过分类搜索这些免费电子书，比如科学，工业，编辑，小说或其它电子书。并且没有注册要求，就可以免费下载电子书。</p>
<p>44、Free-eBooks</p>
<p>网址：https://www.free-ebooks.net/</p>
<p>Free-eBooks是一个提供免费电子书下载，电子书资源，电子书作者介绍的网站，你可以免费下载你喜欢的电子书，也可以上传你自己的电子书分享。你需要注册成为该网站的用户才可以下载它们的电子收资源，不过注册是免费的。</p>
<p>45、ManyBooks</p>
<p>地址：http://manybooks.net/</p>
<p>ManyBooks是一个专门提供免费电子书下载的网站，它所提供的免费电子书超过2万本。你可以通过分类，作者，书名和语言进行搜索查询，每本书都包含一个简介，包括书名，作者，国家和内容简介。所有电子书含都可以下载保存为几十种电子书格式，比如Doc，PDF，RTF，JAR，TXT等等。</p>
<p>46、GetFreeEBooks</p>
<p>网址：https://www.getfreeebooks.com/</p>
<p>GetFreeEBooks是一个提供免费电子书下载的网站，站内的所有电子书都可以免费下载。更重要的一点是，该网站提供的电子书都是符合法律要求或是版权协议的。</p>
<p>47、FreeComputerBooks</p>
<p>网址：http://freecomputerbooks.com/</p>
<p>FreeComputerBooks是一个专门收集计算机，编辑，数学，演讲报告和教程等专业知识电子书的网站。它的网站分类结构非常细致，达到12层的分类系统，超过150个子分类。方便你的电子书搜索查找。</p>
<p>48、FreeTechBooks</p>
<p>网址：http://www.freetechbooks.com/</p>
<p>FreeTechBooks也是一个提供科技类免费电子书下载的网站，该网站提供的电子书都是符合法律要求或是版权协议，许可免费的。</p>
<p>49、TheOnlineBooksPage</p>
<p>网址：http://digital.library.upenn.edu/books/</p>
<p>TheOnlineBooksPage列出了一份免费电子书列表，超过3万本免费电子书供用户免费下载。</p>
<p>50、Owllook</p>
<p>网址：https://www.owllook.net/</p>
<p>一个免费下载各类小说的搜索引擎， 页面清新简洁，无广告。直接输入书名即可搜索。</p>]]></description>
</item>
<item>
  <title>阿里Druid连接池连接不释放、连接泄漏排查</title>
  <link>https://hpkaiq.github.io/posts/druid-connect-not-free/</link>
  <pubDate>Mon, 17 Apr 2023 21:12:25 &#43;0800</pubDate>
  <author>hpkaiq</author>
  <guid>https://hpkaiq.github.io/posts/druid-connect-not-free/</guid>
  <description><![CDATA[<p>配置好下面三个属性。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="c">&lt;!-- 超过时间限制是否回收 --&gt;</span>  
</span></span><span class="line"><span class="cl"><span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&#34;removeAbandoned&#34;</span> <span class="na">value=</span><span class="s">&#34;true&#34;</span> <span class="nt">/&gt;</span>  
</span></span><span class="line"><span class="cl"><span class="c">&lt;!-- 超时时间；单位为秒。180秒=3分钟   --&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&#34;removeAbandonedTimeout&#34;</span> <span class="na">value=</span><span class="s">&#34;180&#34;</span> <span class="nt">/&gt;</span>  
</span></span><span class="line"><span class="cl"><span class="c">&lt;!-- 关闭abanded连接时输出错误日志   --&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&#34;logAbandoned&#34;</span> <span class="na">value=</span><span class="s">&#34;true&#34;</span> <span class="nt">/&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>查看日志文件。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl">2019-04-17 17:10:05:140 - ERROR [Druid-ConnectionPool-Destroy-1559154670] - com.alibaba.druid.pool.DruidDataSource com.alibaba.druid.pool.DruidDataSource.removeAbandoned:2666 abandon connection, owner thread: http-nio-8085-exec-1, connected at : 1555491605100, open stackTrace
</span></span><span class="line"><span class="cl">	at java.lang.Thread.getStackTrace(Thread.java:1559)
</span></span><span class="line"><span class="cl">	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1313)
</span></span><span class="line"><span class="cl">	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1235)
</span></span><span class="line"><span class="cl">	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1225)
</span></span><span class="line"><span class="cl">	at com.xxxx.xx.common.util.JdbcUtil.linkTrace(JdbcUtil.java:39)
</span></span><span class="line"><span class="cl">	at com.xxxx.xx.xxxxx.service.impl.DashboardServiceImpl.getExpenTrend(DashboardServiceImpl.java:263)
</span></span><span class="line"><span class="cl">	at com.xxxx.xx.xxxxx.service.impl.DashboardServiceImpl.getBossData(DashboardServiceImpl.java:58)
</span></span><span class="line"><span class="cl">	at com.xxxx.xx.xxxxx.controller.DashboardController.getBossData(DashboardController.java:43)
</span></span></code></pre></td></tr></table>
</div>
</div><p>日志里查找<code>removeAbandoned</code>关键字，找到自己哪个方法获取连接后没有关闭资源，排查原因。</p>]]></description>
</item>
<item>
  <title>spring cloud java反向代理访问阿里云OSS私有资源</title>
  <link>https://hpkaiq.github.io/posts/spring-proxy-oss/</link>
  <pubDate>Mon, 17 Apr 2023 20:43:10 &#43;0800</pubDate>
  <author>hpkaiq</author>
  <guid>https://hpkaiq.github.io/posts/spring-proxy-oss/</guid>
  <description><![CDATA[<p>最近用到阿里云oss，有阿里云服务器，通过代理内网访问可以实现免除OSS流量费，查到很多nginx反向代理的教程，但是纯java实现没有找到，感觉可以试一试。</p>
<p>（一）
首先要解决反向代理的问题，搜到<code>org.mitre.dsmiley.httpproxy.ProxyServlet</code>可解决。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;dependency&gt;</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&lt;groupId&gt;</span>org.mitre.dsmiley.httpproxy<span class="nt">&lt;/groupId&gt;</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&lt;artifactId&gt;</span>smiley-http-proxy-servlet<span class="nt">&lt;/artifactId&gt;</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&lt;version&gt;</span>1.11<span class="nt">&lt;/version&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/dependency&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="nd">@Configuration</span>
</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MyConfig</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="nd">@Bean</span>
</span></span><span class="line"><span class="cl">    <span class="kd">public</span> <span class="n">ServletRegistrationBean</span> <span class="nf">servletRegistrationAliBean01</span><span class="o">()</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="n">ServletRegistrationBean</span> <span class="n">oss</span>  <span class="o">=</span> <span class="k">new</span> <span class="n">ServletRegistrationBean</span><span class="o">(</span><span class="k">new</span> <span class="n">ProxyServlet</span><span class="o">(),</span> <span class="s">&#34;/ali/bucket_name/*&#34;</span><span class="o">);</span><span class="c1">//修改为自己的bucket_name
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="n">oss</span><span class="o">.</span><span class="na">setName</span><span class="o">(</span><span class="s">&#34;bucket_name&#34;</span><span class="o">);</span>
</span></span><span class="line"><span class="cl">        <span class="n">oss</span><span class="o">.</span><span class="na">addInitParameter</span><span class="o">(</span><span class="s">&#34;targetUri&#34;</span><span class="o">,</span> <span class="s">&#34;http://bucket_name.oss-cn-beijing.aliyuncs.com&#34;</span><span class="o">);</span><span class="c1">//本地测试环境用外网地址，线上改成内网访问的地址
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="n">oss</span><span class="o">.</span><span class="na">addInitParameter</span><span class="o">(</span><span class="n">ProxyServlet</span><span class="o">.</span><span class="na">P_LOG</span><span class="o">,</span> <span class="s">&#34;true&#34;</span><span class="o">);</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">oss</span><span class="o">;</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>（二）
Controller配置如下，转发到自己配置的反向代理</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">@RestController
</span></span><span class="line"><span class="cl">@RefreshScope
</span></span><span class="line"><span class="cl">@RequestMapping(&#34;/api/es&#34;)
</span></span><span class="line"><span class="cl">public class TestController {
</span></span><span class="line"><span class="cl">     @RequestMapping(&#34;/static/**&#34;)
</span></span><span class="line"><span class="cl">    public void testVideoOne(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException, URISyntaxException {
</span></span><span class="line"><span class="cl">        String resourcePath = request.getRequestURI().replace(&#34;/api/es/static&#34;,&#34;&#34;);
</span></span><span class="line"><span class="cl">        HeaderUtil.setHeaderOwn(request,resourcePath);
</span></span><span class="line"><span class="cl">        request.getRequestDispatcher(&#34;/ali&#34; + resourcePath).forward(request, response);
</span></span><span class="line"><span class="cl">    }
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></td></tr></table>
</div>
</div><p>（三）
其中为request设置Header以认证OSS访问的HeaderUtil如下，其中有OSS Authorization计算的java实现，用java的反射在request中添加Header信息。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span><span class="lnt">82
</span><span class="lnt">83
</span><span class="lnt">84
</span><span class="lnt">85
</span><span class="lnt">86
</span><span class="lnt">87
</span><span class="lnt">88
</span><span class="lnt">89
</span><span class="lnt">90
</span><span class="lnt">91
</span><span class="lnt">92
</span><span class="lnt">93
</span><span class="lnt">94
</span><span class="lnt">95
</span><span class="lnt">96
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">import org.apache.commons.codec.binary.Base64;
</span></span><span class="line"><span class="cl">import org.apache.tomcat.util.http.MimeHeaders;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">import javax.crypto.Mac;
</span></span><span class="line"><span class="cl">import javax.crypto.spec.SecretKeySpec;
</span></span><span class="line"><span class="cl">import javax.servlet.http.HttpServletRequest;
</span></span><span class="line"><span class="cl">import java.lang.reflect.Field;
</span></span><span class="line"><span class="cl">import java.net.URISyntaxException;
</span></span><span class="line"><span class="cl">import java.nio.charset.Charset;
</span></span><span class="line"><span class="cl">import java.security.InvalidKeyException;
</span></span><span class="line"><span class="cl">import java.security.NoSuchAlgorithmException;
</span></span><span class="line"><span class="cl">import java.text.SimpleDateFormat;
</span></span><span class="line"><span class="cl">import java.util.Date;
</span></span><span class="line"><span class="cl">import java.util.Locale;
</span></span><span class="line"><span class="cl">import java.util.TimeZone;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">public class HeaderUtil {
</span></span><span class="line"><span class="cl">    /**
</span></span><span class="line"><span class="cl">     * 给request加入Header信息，验证OSS访问权限
</span></span><span class="line"><span class="cl">     * @param request
</span></span><span class="line"><span class="cl">     * @throws URISyntaxException
</span></span><span class="line"><span class="cl">     */
</span></span><span class="line"><span class="cl">    public static void setHeaderOwn(HttpServletRequest request,String resourcePath) throws URISyntaxException {
</span></span><span class="line"><span class="cl">        SimpleDateFormat sdf = new SimpleDateFormat(&#34;EEE, dd MMM yyyy HH:mm:ss &#39;GMT&#39;&#34;, Locale.US);
</span></span><span class="line"><span class="cl">        sdf.setTimeZone(TimeZone.getTimeZone(&#34;GMT&#34;));
</span></span><span class="line"><span class="cl">        String date_GMT = sdf.format(new Date());
</span></span><span class="line"><span class="cl">        String data = request.getMethod() + &#34;\n&#34;
</span></span><span class="line"><span class="cl">                + &#34;\n&#34;
</span></span><span class="line"><span class="cl">                + &#34;\n&#34;
</span></span><span class="line"><span class="cl">                + date_GMT + &#34;\n&#34;
</span></span><span class="line"><span class="cl">                + resourcePath;
</span></span><span class="line"><span class="cl">        String signature = genHMAC(&#34;AccessKeySecret&#34;, data);//AccessKeySecret改成自己的
</span></span><span class="line"><span class="cl">        reflectSetParam(request, &#34;Authorization&#34;, &#34;OSS AccessKeyId:&#34; + signature);//AccessKeyId改成自己的
</span></span><span class="line"><span class="cl">        reflectSetParam(request, &#34;Date&#34;, date_GMT);
</span></span><span class="line"><span class="cl">    }
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    /**
</span></span><span class="line"><span class="cl">     * 反射修改header信息，key-value键值对加入到header中
</span></span><span class="line"><span class="cl">     *
</span></span><span class="line"><span class="cl">     * @param request
</span></span><span class="line"><span class="cl">     * @param key
</span></span><span class="line"><span class="cl">     * @param value
</span></span><span class="line"><span class="cl">     */
</span></span><span class="line"><span class="cl">    private static void reflectSetParam(HttpServletRequest request, String key, String value) {
</span></span><span class="line"><span class="cl">        Class&lt;? extends HttpServletRequest&gt; requestClass = request.getClass();
</span></span><span class="line"><span class="cl">        // System.out.println(&#34;request实现类=&#34;+requestClass.getName());
</span></span><span class="line"><span class="cl">        try {
</span></span><span class="line"><span class="cl">            Field request1 = requestClass.getDeclaredField(&#34;request&#34;);
</span></span><span class="line"><span class="cl">            request1.setAccessible(true);
</span></span><span class="line"><span class="cl">            Object o = request1.get(request);
</span></span><span class="line"><span class="cl">            Field coyoteRequest = o.getClass().getDeclaredField(&#34;coyoteRequest&#34;);
</span></span><span class="line"><span class="cl">            coyoteRequest.setAccessible(true);
</span></span><span class="line"><span class="cl">            Object o1 = coyoteRequest.get(o);
</span></span><span class="line"><span class="cl">            // System.out.println(&#34;coyoteRequest实现类=&#34;+o1.getClass().getName());
</span></span><span class="line"><span class="cl">            Field headers = o1.getClass().getDeclaredField(&#34;headers&#34;);
</span></span><span class="line"><span class="cl">            headers.setAccessible(true);
</span></span><span class="line"><span class="cl">            MimeHeaders o2 = (MimeHeaders) headers.get(o1);
</span></span><span class="line"><span class="cl">            o2.addValue(key).setString(value);
</span></span><span class="line"><span class="cl">        } catch (Exception e) {
</span></span><span class="line"><span class="cl">            e.printStackTrace();
</span></span><span class="line"><span class="cl">        }
</span></span><span class="line"><span class="cl">    }
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    /**
</span></span><span class="line"><span class="cl">     * HmacSHA1 Base64加密
</span></span><span class="line"><span class="cl">     * @param key
</span></span><span class="line"><span class="cl">     * @param data
</span></span><span class="line"><span class="cl">     * @return
</span></span><span class="line"><span class="cl">     */
</span></span><span class="line"><span class="cl">    public static String genHMAC(String key, String data) {
</span></span><span class="line"><span class="cl">        byte[] result = null;
</span></span><span class="line"><span class="cl">        try {
</span></span><span class="line"><span class="cl">            //根据给定的字节数组构造一个密钥,第二参数指定一个密钥算法的名称
</span></span><span class="line"><span class="cl">            SecretKeySpec signinKey = new SecretKeySpec(key.getBytes(), &#34;HmacSHA1&#34;);
</span></span><span class="line"><span class="cl">            //生成一个指定 Mac 算法 的 Mac 对象
</span></span><span class="line"><span class="cl">            Mac mac = Mac.getInstance(&#34;HmacSHA1&#34;);
</span></span><span class="line"><span class="cl">            //用给定密钥初始化 Mac 对象
</span></span><span class="line"><span class="cl">            mac.init(signinKey);
</span></span><span class="line"><span class="cl">            //完成 Mac 操作
</span></span><span class="line"><span class="cl">            byte[] rawHmac = mac.doFinal(data.getBytes(Charset.forName(&#34;UTF-8&#34;)));
</span></span><span class="line"><span class="cl">            result = Base64.encodeBase64(rawHmac);
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        } catch (NoSuchAlgorithmException e) {
</span></span><span class="line"><span class="cl">            System.err.println(e.getMessage());
</span></span><span class="line"><span class="cl">        } catch (InvalidKeyException e) {
</span></span><span class="line"><span class="cl">            System.err.println(e.getMessage());
</span></span><span class="line"><span class="cl">        }
</span></span><span class="line"><span class="cl">        if (null != result) {
</span></span><span class="line"><span class="cl">            return new String(result);
</span></span><span class="line"><span class="cl">        } else {
</span></span><span class="line"><span class="cl">            return null;
</span></span><span class="line"><span class="cl">        }
</span></span><span class="line"><span class="cl">    }
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></td></tr></table>
</div>
</div><p>最后访问的地址例如：
http://127.0.0.1:8081/api/es/static/bucket_name/object_name
可以加个拦截器做个登陆验证。</p>]]></description>
</item>
</channel>
</rss>
